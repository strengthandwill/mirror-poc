continue
exit
match_candidate(candidate1)
exit
match_candidate(candidate1)
exit
match_candidate(candidate2)
match_candidate(candidate1)
exit
w = create_weightage
exit
w = create_weightage
exit
w = create_weightage
exit
w = create_weightage
exit
w = create_weightage
continue
hh.first[1].count
hh.first[1]
hh.first[1].count
hh.first[0]
hh.first[1]
hh.first.[1]
hh.first
hh
syn_hash
w = create_weightage(hh)
hh
hh = read_hash('hiring')
h = read_hash('hiring')
hh = read_hash('candidate2')
json = read_hash('candidate2')
h = read_hash('hiring')
exit
json = read_hash('candidate2')
json = read_hash('candidate1')
json = read_hash('hiring')
continue
json = read_hash('hiring')
exit
json
json = read_hash('hiring')
exit
json = read_hash('hiring')
continue
json = read_hash('hiring')
continue
['a'] + ['b']
['a'].push(['b'])
['a'].merge!(['b'])
['a'].merge(['b'])
a.insert('b',1)
a = ['a']
json = read_hash('hiring')
exit
json
json = read_hash('hiring')
json = read_file('hiring')
exit
json = read_file('hiring')
h = read_hash('hiring')
exit
json.first[1]["adjective"].nil?
json.first[1]["adjective"].blank?
json.first[1]["adjective"].nil?
json.first[1]["adjective"].present?
json.first[1]["adjective"]
json.first[1]
json.first[1]["noun"]
json.first[1]["noun"]["syn"]
json = read_file('candidate2')
json.first[1]["noun"]["syn"]
json = read_file('candidate2')
json.first[1]["noun"]["syn"]
json = read_file('candidate2')
json = read_file('candidate1')
json = read_file('hiring')
exit
json.first[1]["verb"]
json.first[1]["verb"]["syn"]
json.first[1]["noun"]["syn"]
json.first[1]["noun"]["syn
json.first[1]["noun"]
json.first[1]["noun"].count
json.first[1]["verb"]
json.first[1]["noun"]
json.first[1]
json.first[0]
json.first[1]
json.first
json.count
json
json = read_file('hiring')
json = read_file('candidate2')
json = read_file('candidate1')
json.first
json = read_file('hiring')
exit
json = read_file('hiring')
exit
continue
a = hiring
hiring.to_sym
eval(hiring).inspect
eval(hiring)
hiring.inspect
hiring.to_s
hiring = Hash.new
continue
File.open('hr.json', 'w') { |file| file.write(output.to_json) }
output
output['cat']
output['dog']
output[:dog]
output
output['cat'] = json
output['dog'] = json
output = Hash.new
output['dog'] = json
output = []
c['dog']['noun']
c['dog']['verb']
c['dog']['noun']
c['dog']
c = JSON.parse(contents)
contents = File.read('hr.json')
File.open('hr.json', 'w') { |file| file.write({'dog' => json}.to_json) }
File.open(yourfile, 'w') { |file| file.write({'dog' => json}.to_json) }
c = JSON.parse(contents)
{'dog' => json}.to_json
json.to_json
json
c = JSON.parse(contents)
contents = File.read('hr.json')
File.open('hr.json', 'w') { |file| file.write({'dog'=> json}.to_s) }
File.open('hr.json', 'w') { |file| file.write({'dog': json}.to_s) }
File.open('hr.json', 'w') { |file| file.write(json.to_s) }
json.to_s
json
json["noun"]["syn"]
json["noun"]["syn"].each { |w| puts w }
json["noun"]["syn"].count
json["noun"]["syn"]
json["noun"]
json = JSON.parse(response.body)
JSON.parse(response.body)
require 'json'
require 'rubygems'
JSONresponse.body
response.body
response.body.to_json
JSON.parse(response.body)
response.body
response
response = RestClient.get 'http://words.bighugelabs.com/api/2/6d11e7c71f3704ec19fdb4a1acc3ce57/word/json'
continue
response
continue
reponse
continue
